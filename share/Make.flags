#GNU Makefile Include file to setup FLAGS, etc.
#
#05/21/99 C. Ludescher-Furth
#

ifndef LIBROOT
  ifdef _64
    ifneq ("$(wildcard /usr/local/lib64/*)","")
	LIBROOT := /usr/local
    endif
  else
    ifneq ("$(wildcard /usr/local/lib/*)","")
	LIBROOT := /usr/local
    else
      ifneq ("$(wildcard /opt/local/*)","")
	LIBROOT := /opt/local
      endif
    endif
  endif
endif

ifndef PREFIX
 ifdef NTCCHOME
   PREFIX=$(NTCCHOME)
   PREFIX0=$(NTCC_ROOT)
 else
  ifneq ("$(wildcard /usr/ntcc/*)","")
	PREFIX=/usr/ntcc
  endif
 PREFIX0=$(PREFIX)
 endif
else
 PREFIX0=$(PREFIX)
endif 

ifdef PREFIX
 ifndef LIBDIR
  LIBDIR  = $(PREFIX)/lib
 endif
 ifndef BINDIR
  BINDIR  = $(PREFIX)/bin
 endif
 ifndef MODDIR
  MODDIR  = $(PREFIX)/mod
 endif
 ifndef ETCDIR
  ETCDIR  = $(PREFIX0)/etc
 endif
 ifndef INCLDIR
  INCLDIR = $(PREFIX0)/include
 endif
 ifndef MANDIR
 MANDIR  = $(PREFIX0)/man
 endif
endif

# Fortran
FFLAGS   = -c -O
DFFLAGS  =-c -g
STATIC=
DYNAMIC=
ifndef DEFS
  DEFS=
endif
ifndef CDEFS
  CDEFS=
endif
OUT = -o
DOUBLE = -r8
# C
CFLAGS=-c -O 
DCFLAGS=-c -g
OPT=
CPP=gcc
CPPFLAGS=-E -P -x c 
FPPCOM=
# C++
ifndef CXX
  CXX=g++
endif
CXXFLAGS=-c
DCXXFLAGS=-c -g
# Include/Modules
IOPT=-I
MFLAGS=-I
MODEXT=mod
MFFLAGS= -c -w
#python
PYTHON=python
DPY=
ifdef FPREPROC_DEBUG
  DPY= -info
endif
#Elvis flags for elvislib, define LITTLE if the system is little endian
ifndef ELVIS_FLAGS
  ELVIS_FLAGS = -DLITTLE
endif
# Linking
LD=ld
ifndef LDFLAGS
	LDFLAGS=
endif
MVU=
# Libraries
ifndef HDF
  ifdef HDF_HOME
    HDF = -L${HDF_HOME}/lib -ldf -ljpeg -lz
  else
    ifneq ("$(wildcard $(LIBROOT)/lib/libdf*)","")
       HDF = -ldf -ljpeg -lz
    else
       HDF = -lhdf_dummy
    endif
  endif
endif

ifndef MDSPLUS_DIR
  ifneq ("$(wildcard /usr/local/mdsplus/lib/*)","")
       MDSPLUS_DIR = /usr/local/mdsplus
       MDSLIB = -L$(MDSPLUS_DIR)/lib -lMdsLib
  else
       ifndef MDSLIB 
	  MDSLIB=-lmds_dummy
       endif
  endif	
else 
   ifndef MDSLIB
     MDSLIB = -L$(MDSPLUS_DIR)/lib -lMdsLib
   endif
endif

ifdef NO_MDSPLUS
  MDSLIB=
endif

ifdef LIBROOT
ifndef USRLIB
  USRLIB = $(LIBROOT)/lib
  LUSRLIB = -L$(LIBROOT)/lib
endif
endif

INSTALL = install -m
#RANLIB = ar ts 
RANLIB = ar -s
AR = ar -r
TSTLNK = test -f

# Determine OS Type
sysname = $(shell uname -s)
ifeq ($(sysname),Linux)
   hardware = $(shell uname -m)
   ifeq ($(hardware),alpha)
     sysname = AlphaLin	
     MACHINE = AlphaLin
   endif 
endif

# if compiling for CRAY X1
ifdef __X1
  sysname = UNICOS
endif

#=============
# ALPHA LINUX
#=============
ifeq ($(MACHINE),AlphaLin)
	OS=LINUX
	TSTLNK = test -L
	FC=fort
	FC90=fort
	LD=fort
	FFLAGS    = -c -O -align dcommons -align sequence -assume no2underscore
	DFFLAGS   = -c -g -O0 -C -align dcommons -align sequence -assume no2underscore
	OPT = -Df2cFortran 
	CPP=/lib/cpp
	CC = gcc
	X_CFLAGS = -fPIC 
	FIXEDE = -extend_source
#	FORTLIBS = /usr/lib/libfor.a -lUfor
	FORTLIBS = -lfor -lUfor -lFutil 
	XFLIB = -lm 
	SHLIBS = $(FORTLIBS)
	MDSLIB := $(MDSLIB) -lMdsIpShr
	XLIBS = -lots
	X_LDFLAGS = -shared -Bsymbolic
	CLIBS = -lstdc++
	SHLIBS = -lUfor -lfor -lFutil -lcpml -lc
	USEFC=Y
# Note -module <dir> is supported
endif

#============
# ALPHA OSF1
#============
ifeq ($(sysname),OSF1)
	MACHINE=ALPHA
	OS=ALPHA
	DYNAMIC=-automatic
        FC=f90
        FC90=$(FC)
	CC = gcc
	FFLAGS =   -c -O3 -align commons
	DFFLAGS =   -g -c -align commons
	CXX=g++ 
	XLIBS=-lfor
	FIXEDE = -extend_source
	FORTLIBS = -lfor -lUfor -lFutil 
	X_LDFLAGS = -S -shared
	SHLIBS = -lUfor -lFutil -lm -lots -lc
	MDSLIB := $(MDSLIB) -lMdsIpShr
	CLIBS = -lstdc++ -lgcc_s
endif

#=======
# NEC
#=======
ifeq ($(sysname),SUPER-UX)
	MACHINE=NECsx5
	OS=SX
        FC=f90
        FC90=$(FC)
	CC=cc
	CPP=/lib/cpp
	FIXED=-f0
	FIXEDE=-f3
	DYNAMIC=-automatic
	CFLAGS = -c -hnovector
	DCFLAGS := $(DCFLAGS)
        CXXFLAGS = -c 
	FFLAGS =  -c -C ssafe -Wf" -init stack=zero -init heap=zero"
	DFFLAGS = -g -c 
	CXX=c++ 
	XLIBS=
	ifndef FORTLIBS
	  FORTLIBS = -lf90sx -lf90sxe -lf90sxg 
        endif
        ifndef CLIBS
	  CLIBS =  -liostream 
        endif
endif

#==============
# SOLARIS
#==============
ifeq ($(sysname),SunOS)
	MACHINE=SUN
	OS=SUN
        FC=f95
        FC90=$(FC)
	ELVIS_FLAGS=
	DOUBLE = -xtypemap=real:64 
#	TSTLNK = test -L
	DYNAMIC = -stackvar
	CC = gcc
	CFLAGS := $(CFLAGS) -w
	X_CFLAGS = -fPIC 
	CPP=/usr/ccs/lib/cpp
#	FFLAGS  := -c -fast -ftrap=common
	FFLAGS  := -c -O3 -depend -dalign -fns -libmil -xlibmopt -ftrap=common
	DFFLAGS :=  -c -dalign -fns -libmil -xlibmopt -g -C -ftrap=common
	X_FFLAGS = -PIC -G
	MFLAGS=-M
	MODEXT=M
	CXX=g++
	CXXFLAGS=-c 
	XLIBS = -lsocket -lnsl -lposix4
	ifneq ("$(wildcard /opt/SUNWspro/lib/libf77compat*)","")        
	  XFLIB = -lf77compat
	  MODEXT=mod
	else
	  XFLIB = -lF77
        endif
        FIXEDE = -e
	ifndef FORTLIBS
          FORTLIBS = -L/opt/SUNWspro/lib -lfsu -lF77 -lsunmath -lfai -lfai2 \
		   -lfmaxvai -lfmaxlai -lfminvai -lfminlai -lfsumai
	endif
	ifndef CLIBS
#		CLIBS = /usr/local/lib/libstdc++.so.2.10.0
		CLIBS = -L/usr/local/gcc32/lib -L/usr/local/gcc32/lib/gcc-lib/sparc-sun-solaris2.6/3.2.3 -lstdc++ -lgcc_s -lgcc

	endif
	SHLIBS = -L/opt/SUNWspro/lib -lfsu -lF77 -lsunmath -lc
	X_LDFLAGS =  -G -Bsymbolic
	RPATH= -R $(LIBDIR) 
endif
#
# End Solaris
#==============
#
#========================
# MAC: Determine Compiler
#========================
ifeq ($(sysname),Darwin)
	MACHINE=MAC
	OS=OSX  
	ELVIS_FLAGS=
	ifdef FORTRAN_VARIANT
	  ifeq ("${FORTRAN_VARIANT}","GCC")
	    MKGCC=TRUE
	  endif
	  ifeq ("${FORTRAN_VARIANT}","NagWare")
	    MKNAGFLAG=TRUE
      endif
	  ifeq ("${FORTRAN_VARIANT}","Intel")
	    MKINTEL=TRUE
      endif
	else	
	  DEFS := $(DEFS) -D__IBM
	  CDEFS := $(CDEFS) -D__IBM
	  MKIBMFLAG=TRUE
    endif
# add __MACOS__ for rpcalc_c/export.h
	DEFS := $(DEFS) -D__OSX -D__MACOS__
	CDEFS := $(CDEFS) -D__OSX -D__MACOS__
    FPPCOM = -fppcom "$(CPP) $(CPPFLAGS) -x assembler-with-cpp"
	ifndef NETCDF_DIR
       NETCDF_DIR = /opt/local
    endif
	RANLIB = ranlib
endif
# End MAC
#=========
#
#========
# IBM
#========
ifeq ($(sysname),AIX)
	MACHINE=RS6000
	OS=RS6000
	MKIBMFLAG=TRUE
endif

ifdef MKIBMFLAG
#  xlf90 expects suffix .f or .F
#  for .f90/.F90 use f90
#  if f90 does not exist, make a link to /usr/bin/xlf90
	FC=xlf
#	 FC90=f90
        FC90=xlf95 -F:f90
	FIXED=-qfixed=72
	FIXEDE=-qfixed=132
#	FFLAGS  = -c -O -qintlog -qspillsize=2048
#	DFFLAGS := -c -g -qintlog -qspillsize=2048
ifdef _64
	RANLIB = ar -X64 -s
	AR = ar -X64 -r
	FFLAGS  := -c -q64 -O -bmaxdata:0x70000000 -qspillsize=2048 -qinitauto
	DFFLAGS := -c -g -C -q64 -qspillsize=2048 -bmaxdata:0x70000000
	LDFLAGS = -q64 -bmaxdata:0x70000000
else
	FFLAGS  = -c -O -qalias_size=1654858008 -bmaxdata:0x80000000 -qspillsize=4096 -qmaxmem=-1 -qinitauto 
	DFFLAGS := -c -g -C -qalias_size=165485800 -qspillsize=4096 -bmaxdata:0x80000000  -qmaxmem=-1
	LDFLAGS = -bmaxdata:0x80000000
endif

# most ecs/elvislib don't compile with xlc
#	CC        = xlc
	ifndef CC
	  CC = gcc
	endif
# Need xlC at Garching & NERSC
	CXX       = xlC
	X_CFLAGS = -fPIC 
ifdef _64
	CFLAGS := $(CFLAGS) -Dextname -q64
	CXXFLAGS  = -c -qrtti=all -q64
	DCXXFLAGS  = -g -c -qrtti=all -q64
else
	CFLAGS := $(CFLAGS) -Dextname
	CXXFLAGS  = -c -qrtti=all
	DCXXFLAGS  = -g -c -qrtti=all
endif
        INSTALL = /usr/bin/install -M
ifdef FLIBROOT
	FORTLIBS = -L$(FLIBROOT)/lib -lxlf90 -lxlopt -lf
else
	FORTLIBS = -lxlf90 -lxlopt
endif
	X_LDFLAGS = -bM:SRE -bnoentry
	CLIBS = -lC
        ifndef ELVIS_FLAGS
	  ELVIS_FLAGS= 
        endif
endif
# End IBM
#===========

#===========
#  SGI 
#===========
ifeq ($(sysname),IRIX64)
	MACHINE=SGI
	OS=SGI
        FC=f90
        FC90=$(FC)
	ifdef ABI
          SGI_ABI=-64
	  CC = cc
	  CXX = CC
	else
	  SGI_ABI=
	  CC = cc
	  CXX = CC
	endif
	STATIC=-static
	FFLAGS  = -c -O3 -OPT:Olimit=0 $(SGI_ABI)
	DFFLAGS = -c -g $(SGI_ABI) -check_bounds
	LDFLAGS = $(SGI_ABI)
	CFLAGS := $(CFLAGS) -w $(SGI_ABI)
	X_CFLAGS = -KPIC 
	CXXFLAGS = -c $(SGI_ABI) -LANG:std -woff 1355
	DCXXFLAGS = -c -g $(SGI_ABI) -LANG:std -woff 1355
	DCFLAGS := $(DCFLAGS) $(SGI_ABI)
	CPP=/usr/lib/cpp
	XLIBS = -lfortran
        INSTALL = install -m
	CLIBS = -lC
	FORTLIBS = -lfortran  -lffio -lftn -lm
	X_LDFLAGS = -shared
#	USEFC=Y
endif

#===========
# LINUX
#============
ifeq ($(sysname),Linux)
	MACHINE=LINUX
	OS=LINUX
	TSTLNK = test -L
	OPT = -Df2cFortran 
	CPP=/lib/cpp
	CXXFLAGS= -c 
	CFLAGS := $(CFLAGS) -w
	X_CFLAGS = -fPIC
        ifndef FLIBROOT
          ifdef F90HOME
            FLIBROOT = $(F90HOME)
          endif
        endif
# Check if NAG90, VASTF90, NAG95 or Portland
        ifdef NAG90
          MKNAGFLAG=TRUE
          NO_DEF=TRUE
        else 
          ifdef VASTF90
            NO_DEF=TRUE
            FC=/usr/local/vastf90/bin/f90
            FC90=/usr/local/vastf90/bin/f90
            MODEXT=vo
            XFLIB = -L$(LIBROOT)/vastf90/lib -lvast90 -lf2c -lm
            FFLAGS = -c -O -ff90
            DFFLAGS = -c -g -ff90
          else
            ifdef NAG95
              MKNAGFLAG=TRUE
              NO_DEF=TRUE
            else
	      ifdef Portland
                MKPGIFLAG=TRUE
                NO_DEF=TRUE
	      endif
            endif
          endif
       endif
#      endif "ifdef NAG90"

  ifeq "$(findstring g77,$(FC))" "g77"
    NO_DEF=TRUE
    FFLAGS = -c -O3
    DFFLAGS = -c -g
  endif
  ifeq "$(findstring pgf90,$(FC))" "pgf90"
    MKPGIFLAG=TRUE 
    NO_DEF=TRUE
  endif
  ifeq "$(findstring pgf95,$(FC))" "pgf95"
    MKPGIFLAG=TRUE 
    NO_DEF=TRUE
  endif
  ifeq "$(findstring lf90,$(FC))" "lf90"
    FORTRAN_COMMAND = lf90
  endif
  ifeq "$(findstring lf95,$(FC))" "lf95"
    FORTRAN_COMMAND = lf95
  endif

  ifdef FORTRAN_VARIANT
      FVAR=TRUE
      NO_DEF=TRUE
      ifeq ("${FORTRAN_VARIANT}","Portland")
        MKPGIFLAG=TRUE 
	ifeq ("${FORTRAN_TYPE}","90")
	  FC=pgf90
        endif
      endif
      ifeq ("${FORTRAN_VARIANT}","PathScale")
        MKPATHFLAG=TRUE
      endif
      ifeq ("${FORTRAN_VARIANT}","NagWare")
        MKNAGFLAG=TRUE
      endif	 
      ifeq ("${FORTRAN_VARIANT}","Fujitsu")
        MKFUJITSU=TRUE
      endif	 
      ifeq ("${FORTRAN_VARIANT}","LaheyFujitsu")
        MKLAHEY=TRUE
      endif	 
      ifeq ("${FORTRAN_VARIANT}","Intel")
        MKINTEL=TRUE
      endif
      ifeq ("${FORTRAN_VARIANT}","GCC")
        MKGCC=TRUE
      endif	 	 
      ifeq ("${FORTRAN_VARIANT}","Absoft")
         MKABSOFT=TRUE
      endif
  else
      ifndef NO_DEF
# DEFAULT = LaheyFujitsu 
        MKLAHEY=TRUE
      endif
  endif
endif
#==============
# End LINUX
#==============

#========
# Absoft
#======
ifdef MKABSOFT
    ifeq "$(origin FC)" "default"
      FC = f90
    endif
    FC90=$(FC)
    CC=gcc
    FFLAGS    := -c -w 
    F90FLAGS  := -c -w 
    DFFLAGS   := -g -c -O2 -YEXT_NAMES=LCS -s -YEXT_SFX=_
    DF90FLAGS := -g -c -O2 -YEXT_NAMES=LCS -s -YEXT_SFX=_
    FIXEDE=-W132
    MFLAGS=-p
    MODEXT=mod
    DEFS := $(DEFS) -D__ABS
    CDEFS:= $(CDEFS) -D__ABS
    XFLIB= -lm -lU77
endif

#===========
# Portland
#===========
  ifdef MKPGIFLAG
    ifneq ("$(wildcard $(PREFIX)/pgf90/*)","")
	LIBDIR  = $(PREFIX)/pgf90/lib
	MODDIR  = $(PREFIX)/pgf90/mod
    endif
    ifneq ("$(wildcard $(LIBROOT)/pgf90/*)","")
	FLIBROOT= $(LIBROOT)/pgf90
    endif
    ifeq "$(origin FC)" "default"
      FC = pgf95
    endif
    FC90=$(FC)
    ifeq "$(origin CC)" "default"
      CC = gcc
    endif
    DEFS := $(DEFS) -D__PGF90
    FFLAGS = -c -O -Mnoupcase -Mdalign -Mdefaultunit -Ktrap=fp
    DFFLAGS =  -c -g -Mnoupcase -Mdalign -Mdefaultunit -Minform=inform -Ktrap=fp -Mbounds
    ifndef FORTLIBS
     ifdef F90HOME
#       FORTLIBS = -L$(F90HOME)/lib -lpgf90 -lpgf90_rpm1 -lpgf902 -lpgf90rtl -lpgftnrtl -lm -lpgc -lpgsse1 -lpgsse2 $(F90HOME)/lib/gdix86.so
       F_MAIN=$(F90HOME)/lib/f90main.o
# For pgf 7.2
       FORTLIBS = -L$(F90HOME)/lib -lpgf90 -lpgf90_rpm1 -lpgf902 -lpgf90rtl -lpgftnrtl -lm -lpgc -lrt -lstd -lC
      else
        FORTLIBS = -L/usr/pgi/linux86/lib -lpgf90 -lpgf90_rpm1 -lpgf902 -lpgf90rtl -lpgftnrtl -lm -lpgc   
     endif
    endif

    ifndef CLIBS
       ifdef GCC_PATH
         CLIBS = -L$(GCC_PATH)/lib -lstdc++ 
       else
#        CLIBS = -L/usr/lib/gcc-lib/i386-redhat-linux/egcs-2.96 -lgcc -lstdc++
#  if using pgi C
         CLIBS = -lstd -lpgc -lC
#         CLIBS = -L/usr/local/gcc32/lib -lstdc++ 
       endif
    endif
    USEFC=Y
    SHLIBS = $(FORTLIBS)
    LD=pgf90
    X_LDFLAGS = -shared
#    XFLIB=-lpgftnrtl 
#    XFLIB= -L$(F90HOME)/lib -lpgc -lpgsse1 -lpgsse2 
  endif
# End Portland
#===============

#===============
# NAGWARE
#===============
 ifdef MKNAGFLAG
      ifdef NAG90
	FC=f90
      else
	FC=f95
      endif
      FC90=$(FC)
      CC=gcc
      FFLAGS := $(FFLAGS) -PIC -w -dcfuns -dusty -kind=byte -mismatch_all -maxcontin=85
      DFFLAGS := -g -gline -PIC -c -w -dcfuns -dusty -kind=byte -mismatch_all -maxcontin=85
      ifneq ("$(wildcard $(LIBROOT)/lib/NAGWare/*)","")
        XFLIB = -L$(LIBROOT)/lib/NAGWare -lf97 -lf96 -lm
      endif
      DEFS := $(DEFS) -D__NAGWARE
      FIXED = -72
      FIXEDE = -132
  endif
#
# End NAGWARE
#=============
#=========
# Fujitsu
#=========
  ifdef MKFUJITSU
      ifneq ("$(wildcard $(PREFIX)/ffc/*)","")
	LIBDIR  = $(PREFIX)/ffc/lib
	MODDIR  = $(PREFIX)/ffc/mod
      endif
      ifneq ("$(wildcard $(LIBROOT)/ffc/*)","")
	FLIBROOT = $(LIBROOT)/ffc
      endif
      ifdef FUJITSU_90
	FC=f90
	FC90=f90
      else
	FC=f95
	FC90=f95
      endif
      ifdef FORTRAN_COMMAND
        FC = ${FORTRAN_COMMAND}
        FC90 = ${FORTRAN_COMMAND}
      endif
      CC=gcc
      FIXED = -Fixed
      FIXEDE = -Fixed -w
      MFLAGS=-I
      FFLAGS= -c -O -Am -Kfast -X9 -f1444 -f2004,2006,2008 -Kfap -Nallextput
      DFFLAGS= -c -g -Am -Haesu -X9 -f1444 -f2004,2006,2008 -Kfap -Nallextput
      X_FFLAGS = -KPIC
      X_LDFLAGS = -shared 
      ifndef FORTLIBS
        FORTLIBS = -L/usr/local/ffc/lib -lfj9f6 -lfj9i6 -lfj9e6
      endif
      SHLIBS = $(FORTLIBS)
      ifndef CLIBS
#       CLIBS = -L/usr/lib/gcc-lib/i386-redhat-linux/egcs-2.91.66 -lstdc++
      CLIBS = -L/usr/local/gcc32/lib -lstdc++
      endif
      USEFC=Y
  endif
# End Fujitsu
#
#=============
# Pathscale
#=============
  ifdef MKPATHFLAG
      ifeq "$(origin FC)" "default"
        FC=pathf95
      endif
      FC90=$(FC)
      CC=gcc
      DEFS = -D__PATHSCALE
      FIXED = -fixedform
      FIXEDE = -extend_source
      MFLAGS=-I
      MODUP=Y
      ifndef PATHSCALE_F90_OPT
        PATHSCALE_F90_OPT = -LANG:heap_allocation_threshold=20000 
      endif 
      ifdef _64
        FFLAGS = -c -m64 -w -fno-second-underscore -fPIC \
	-TENV:simd_imask=OFF:simd_zmask=OFF:simd_omask=OFF $(PATHSCALE_F90_OPT)
        DFFLAGS = -c -m64 -g -O0 -fno-second-underscore -fPIC  \
	-TENV:simd_imask=OFF:simd_zmask=OFF:simd_omask=OFF $(PATHSCALE_F90_OPT)
        LDFALGS = -m64
        CFLAGS = -c -m64 -O -fPIC
        DCFLAGS = -c -g -m64 -fPIC
        CXXFLAGS = -c -m64 -O -fPIC
        DCXXFLAGS = -c -g -m64 -fPIC
      else
        FFLAGS= -c -w -fno-second-underscore
        DFFLAGS= -c -g -fno-second-underscore 
        X_FFLAGS = -fPIC
      endif
      X_LDFLAGS = -shared
      ifndef CLIBS
        CLIBS = -L/usr/lib/gcc/x86_64-redhat-linux/3.4.3 -lstdc++ -lgcc_s -lgcc
      endif
      ifdef MODULESHOME
#        LAPACKHOME = $(ACML_HOME)/pathscale32
#        LAPACK = -L$(LAPACKHOME) -lacml
        LAPACK = -L$(LAPACKHOME) -lacml
        BLAS = -L$(BLASHOME) -lacml
        ifdef GLOBUS_LOCATION
           MDSLIB := $(MDSLIB) -L$(GLOBUS_LOCATION)/lib
        endif
	ifdef F90LIBS_NETCDFL
	   NETCDF = $(F90LIBS_NETCDFL) -lxml2
        else
           ifdef NETCDF_DIR
	     NETCDF = -L$(NETCDF_DIR)/lib -lnetcdf
           endif
        endif
      endif
      ifneq ("$(wildcard $(PREFIX)/pathscale/*)","")
	LIBDIR  = $(PREFIX)/pathscale/lib
	MODDIR  = $(PREFIX)/pathscale/mod
      endif

      ifndef FORTLIBS
       ifdef FLIBROOT
        ifneq ("$(wildcard $(FLIBROOT)/libmpath*)","")
           FORTLIBS = -L$(FLIBROOT) -lmpath -lmv -lpathfortran -lpscrt
        else
           FORTLIBS = -L$(FLIBROOT)/lib -lmpath -lmv -lpathfortran -lpscrt
        endif
        ifdef _64
	  F_MAIN = -lpathfstart
	  XFLIB = -L$(FLIBROOT)/lib -lpscrt_p -lm
        else
	  F_MAIN = -lpathfstart
          XFLIB = -lm
        endif
       endif
      endif
      SHLIBS= $(FORTLIBS)
      USEFC=Y
  endif
#
# End Pathscale
#=================
#
#=================
# Lahey Fujitsu
#=================
  ifdef MKLAHEY
      ifdef MODULESHOME
        BLAS = -L$(BLASHOME) -lblas
        LAPACK = -L$(LAPACKHOME) -llapack -lblas
        MDSLIB = -L$(MDSPLUS_DIR)/lib -lMdsLib 
#        MDSLIB = -L$(MDSPLUS_DIR)/lib -lMdsLib -L$(GLOBUS_LOCATION)/lib/ -lglobus_xio_gcc32dbg
        ifndef NETCDF_DIR
          ifdef NETCDFHOME
             NETCDF_DIR = $(NETCDFHOME)
          endif
        endif
        ifdef F90LIBS_NETCDFL
	   NETCDF = $(F90LIBS_NETCDFL) -lxml2
        else
           ifdef NETCDF_DIR
	     NETCDF = -L$(NETCDF_DIR)/lib -lnetcdf 
           endif
        endif
        ifdef _64
          CLIBS = -L/usr/lib/gcc/x86_64-redhat-linux/3.4.3 -lstdc++ -lgcc_s -lgcc 
        else 
          CLIBS = -L/usr/lib/gcc-lib/i386-redhat-linux/3.2.3 -lstdc++ -lgcc_s -lgcc /usr/lib/gcc-lib/i386-redhat-linux/3.2.3/crtbegin.o /usr/lib/gcc-lib/i386-redhat-linux/3.2.3/crtend.o /usr/lib/gcc-lib/i386-redhat-linux/3.2.3/../../../crtn.o
        endif
      else
        ifdef FLIBROOT
          ifneq ("$(wildcard $(FLIBROOT)/include/netcdf*)","")
            NETCDF_DIR = $(FLIBROOT)
          endif
        endif
      endif

      ifneq ("$(wildcard $(PREFIX)/lff95/*)","")
	LIBDIR  = $(PREFIX)/lff95/lib
	MODDIR  = $(PREFIX)/lff95/mod
      endif
      ifndef FLIBROOT
        ifneq ("$(wildcard $(LIBROOT)/lff95/*)","")
	  FLIBROOT = $(LIBROOT)/lff95
        endif
      endif

      ifdef _64
        XFLIB = -L$(FLIBROOT)/lib64 -lm 
      else
        XFLIB = -L$(FLIBROOT)/lib -lm -lfst
      endif
#      XFLIB := $(XFLIB) -lxml2

      ifdef MPI_ENABLE
        FC=mpif90
        FC90=mpif90
        CC=mpicc
        CXX=mpicxx
      else
        ifeq "$(origin FC)" "default"
          ifdef _64
            FC=lf95
          else
            FC=lf95
          endif
        endif
        FC90 = $(FC)
        CC=gcc
      endif
      ifdef FORTRAN_COMMAND
        FC = ${FORTRAN_COMMAND}
        FC90 = ${FORTRAN_COMMAND}
      endif
      ifdef IDL6_FIX
         DEFS := $(DEFS) -D__IDL6_FIX
         CDEFS := $(CDEFS) -D__IDL6_FIX
      endif
      FIXED = --fix
      FIXEDE = --wide
      MFLAGS=-I
      FFLAGS= -c -O --trap --trace --quiet -ls 
      DFFLAGS= -c -g --trap --trace --chk a,e,s,u 
      X_FFLAGS = -KPIC
      X_LDFLAGS = -shared
      ifndef FORTLIBS
        ifdef _64
          FORTLIBS = -L$(FLIBROOT)/lib64 -lfj90i -lfj90f -lelf
	  F_MAIN = $(FLIBROOT)/lib64/fj90rt0.o
        else
          FORTLIBS = -L$(FLIBROOT)/lib -lfj9f6 -lfj9i6 -lfj9e6 -lfccx86_6a
	  F_MAIN = $(FLIBROOT)/lib/fj90rt0.o
        endif
      endif
      SHLIBS= $(FORTLIBS) -lc
      ifndef CLIBS
#        CLIBS = -L/usr/lib/gcc-lib/i386-redhat-linux/2.96 -lgcc -lstdc++
        CLIBS = -L/usr/local/gcc32/lib -lstdc++
      endif
      USEFC=Y
      DOUBLE = --dbl
  endif
#
# End Lahey Fujitsu
#===================  
#
#================
# GFORTRAN / GCC
#================
  ifdef MKGCC
    USEFC=Y
    ifeq "$(origin FC)" "default"
      FC=gfortran
    endif
    FC90=$(FC)
    FIXEDE = -ffixed-line-length-132
    DYNAMIC=
    MFLAGS= -I
    MODEXT=mod
    ifeq "$(origin CC)" "default"
      CC=gcc
    endif
    ifndef CXX
      CXX=g++
    endif
    ifdef _64
      Bit=64
      FFLAGS = -c -O -m64 -ffpe-trap=invalid,zero,overflow -fno-range-check -fdollar-ok -fPIC
      DFFLAGS = -c -g -m64 -ffpe-trap=invalid,zero,overflow -fno-range-check -fdollar-ok -fPIC
      CFLAGS = -c -O -m64 -fPIC
      CXXFLAGS =  -c -O -m64 -fPIC
    else
      FFLAGS = -c -O -ffpe-trap=invalid,zero,overflow -fno-range-check -fdollar-ok -fPIC
      DFFLAGS = -c -g -ffpe-trap=invalid,zero,overflow -fno-range-check -fdollar-ok -fPIC
      CFLAGS = -c -O -fPIC
      CXXFLAGS =  -c -O -fPIC
    endif
    ifndef FORTLIBS
      FORTLIBS=-L$(F90HOME)/lib${Bit} -L/lib${Bit} -L/usr/lib${Bit} -lgfortran -lm
    endif

    CLIBS = -lc -lstdc++
    ifndef F_MAIN
       F_MAIN = -lgfortranbegin -lfrtbegin
    endif
    ifndef NETCDF_DIR
       ifdef NETCDFHOME
         NETCDF_DIR = $(NETCDFHOME)
       else
         NETCDF_DIR = /usr/local/netcdf-3.6.0x
       endif
    endif
    ifdef GLOBUS_LOCATION
       MDSLIB = -L$(MDSPLUS_DIR)/lib -lMdsLib -L$(GLOBUS_LOCATION)/lib -lglobus_xio_gcc64
    endif
    ifndef BLAS
       ifdef BLASHOME
         BLAS = -L$(BLASHOME) -lblas
       endif
    endif
    ifndef LAPACK
       ifdef LAPACKHOME
         LAPACK = -L$(LAPACKHOME) -llapack
       endif
    endif
  endif

# End Gfortran /GCC
#=====================
#
#==========
# Intel
#==========
  ifdef MKINTEL
    ifeq "$(origin FC)" "default"
#     FC=ifc
      FC=ifort
    endif
    FC90=$(FC)
    FFLAGS = -c -O -w -mp -fpe0 -heap-arrays 20
    DFFLAGS = -c -g -C -fpe0 -heap-arrays 20
    FIXEDE = -132
    DYNAMIC=-auto
    MFLAGS= -I
    MODEXT=mod
    ifdef F90HOME
      FLIBROOT = $(F90HOME)
    else
      ifneq ("$(wildcard $(LIBROOT)/intel-9.0/*)","")
        IFC_V=intel-9.0
      endif
      FLIBROOT = $(LIBROOT)/$(IFC_V)
    endif
    ifndef FORTLIBS
       ifdef _64
#          FORTLIBS = -L$(FLIBROOT)/lib  -lifport -lintlc -limf -lifcore -ldl -lsvml -lm -lirc
          FORTLIBS = -L$(FLIBROOT)/lib  -lifport -lintlc -limf -lifcore -ldl -lm -lirc
       else
#         FORTLIBS = -L$(FLIBROOT)/lib -lifport -lifcore -lcprts -lunwind -lm -lcxa -lirc
# rga, the above caused preact_init to segfault on SGI
          FORTLIBS = -L$(FLIBROOT)/lib -lifport -limf -lifcore -lunwind -lm -lirc -lcxaguard -lipr
       endif
    endif
    ifdef INTEL_CXXLIB_ICC
       CC = icc
       CXX= icpc
       CFLAGS = -c -O -w -mp 
#       CFLAGS = -c -O -w -mp -cxxlib-icc 
#       CXXFLAGS =  -c -O -mp -w  -cxxlib-icc
       CXXFLAGS =  -c -O -mp -w  
       CLIBS = -L$(CCHOME)/lib -lcprts -lcxa
       XLIBS = -L$(CCHOME)/lib -lcprts -lcxa
       F_MAIN = $(F90HOME)/lib/for_main.o
    else
       ifdef INTEL_CC
         ifndef GCC_VERSION
           GCC_VERSION=410
         endif
         CC = icc
         CXX= icpc
         CFLAGS = -c -O -w -mp -gcc-version=$(GCC_VERSION) 
         CXXFLAGS = -c -O -mp -w -gcc-version=$(GCC_VERSION)
         F_MAIN = $(F90HOME)/lib/for_main.o
       else
         CC=gcc
         CXX=g++
         CFLAGS = -c -O2 -m64 -ansi
         CXXFLAGS =  -c -m64
       endif
    endif
    ifndef CLIBS
       ifndef SuSE
         CLIBS = -L/usr/lib/gcc-lib/ia64-redhat-linux/3.2.3 -lstdc++
       else
         CLIBS = -L/usr/lib/gcc/ia64-suse-linux/4.1.2 -lstdc++ 
         ifdef CCHOME
	    CLIBS := $(CLIBS) -L$(CCHOME)/lib -lipr
         endif 
         TERMCAP = ""
       endif
    endif
    ifndef NETCDF_DIR
       ifdef NETCDFHOME
         NETCDF_DIR = $(NETCDFHOME)
       else
         NETCDF_DIR = /usr/local/netcdf-3.6.0x
       endif
    endif
    ifndef BLAS
       ifdef BLASHOME
          BLAS = -L$(BLASHOME) -lmkl_lapack -lmkl_ipf -lguide -lpthread
       else
          BLAS = -L/usr/local/mkl61/lib/64 -lguide -lmkl_lapack -lmkl_ipf 
#         BLAS = -lblas -L/usr/lib/gcc-lib/ia64-redhat-linux/3.2.3 -lg2c
       endif
    endif
    ifndef LAPACK
       ifdef LAPACKHOME
         LAPACK = -L$(LAPACKHOME) -lmkl_lapack -lmkl_ipf -lguide -lpthread
       else
         LAPACK = -lmkl_lapack -lmkl_ipf -lguide -lpthread
       endif
    endif
    ifdef GLOBUS_LOCATION
       MDSLIB = -L$(MDSPLUS_DIR)/lib -lMdsLib -L$(GLOBUS_LOCATION)/lib -lglobus_xio_gcc64
#      MDSLIB = -L$(MDSPLUS_DIR)/lib -lMdsLib -lRoam -L$(GLOBUS_LOCATION)/lib -lglobus_xio_gcc64
    endif
  endif

  RPATH= -rpath $(LIBDIR)
#
# End Intel
#=============
#
#=====================
# HP
#=====================
ifeq ($(sysname),HP-UX)
        MACHINE=HP
        OS=HP
	CC = gcc
#       CC = cc
#       FC = fort77
#                                  +es allows lines > 72 characters
#                                  +A8 does alignment
#                                  +U77 get /usr/lib/libU77.a
#                                  +E1 gets nonstandard subs   
#                                  +E6 allows variable formats.
#                                  -K = static allocation.
#                                  +DA  & +DS = HP compat.
#				   +DA2.0W PA-RISC model
#
#       FFLAGS = -c -O3 +es +e +U77  ! U77 = BSD 3F library
#       FFLAGS = -c -O3 -C +DA2.0    ! "-O -C" does not work on f90 modules
        FFLAGS = -c +U77
        DFFLAGS = -c -g +U77
	CFLAGS = -c -w -Dextname
	DCFLAGS = -g -c  -Dextname
#        CFLAGS = -c -O -w -Ae -Dextname
#        DCFLAGS = -g -c  -Ae -Dextname
#        XLIBS = -lm
        XLIBS =
        XFLIB = -lU77 -lm -lcl
#       FIXEDE = +es               ! fort77
#       STATIC = +E7 -K            ! fort77
        FIXEDE = +extend_source
        STATIC = +save
        MODUP = Y
	FORTLIBS = -L/opt/fortran90/lib -lf -lF90 /usr/lib/libcl.1 /usr/lib/libc.1
	CLIBS =  -lc -L/usr/local/lib -lstdc++ -lm 
	USEFC=Y
	X_LDFLAGS = -b
endif
#
# End HP
#===========
#
#==============
# UNICOS
#===============

ifeq ($(findstring UNICOS,$(sysname)),UNICOS)
	MACHINE=Cray_X1
        OS=X1
        __X1=Y
        FC = ftn
	FC90 = ftn
# -em : create .mod files
	FFLAGS = -c -em
	DFFLAGS = -c -g -em -m0  
#	FFLAGS = -c  
#	DFFLAGS = -c -g -m0
	OUT = -o
	CPP = cpp
        CPPFLAGS = -E -P
	FPPCOM = -fppcom "$(CPP) $(CPPFLAGS)"
	CXX = CC
	CXXFLAGS = -c -h exceptions
	DCXXFLAGS = -c -g -h exceptions
	MFLAGS=-p
	MODEXT=mod
	MODUP = Y
#	MDIR = $(OBJ)/lib
        FIXED = -f fixed
        FIXEDE = -f fixed -N 132
        STATIC = -ev
	NETCDF := -L$(NETCDF_DIR)/lib -lnetcdf
	PERL=/usr/bin/perl
	BLAS=
	LAPACK=
	CLIBS = -L$(CC_SV2)/lib -lC
endif
#
# End UNICOS
#=============

#=======================
# CRAY SV1, T3E (NERSC)
#======================
# Obsolete CRAY (NERSC)
#=======================
ifeq ($(findstring sn,$(sysname)),sn)
#  -dp = disable double; -Ca produce CIF file; -p find modules
	MACHINE=CRAY
        OS=CRAY
	MODUP = Y
	FFLAGS = -O3 -em
	DFFLAGS = -g -em
	OUT = -b
	CPP = cpp
	CXX = CC
	CXXFLAGS = -c -h exceptions
	DCXXFLAGS = -c -g -h exceptions
	MFLAGS=-p
	MODEXT=mod
	RANLIB =
        AR =
	NETCDF=-lnetcdf
	BLAS=
	LAPACK=
	CLIBS = -L/opt/ctl/CC/3.3.0.2/lib -lC
endif

# End Obsolete CRAY
#====================

#=============================
# Handle Libraries / Includes
#==============================
ifndef BLAS 
ifndef SUNPERF
  BLAS   = -lblas
endif
endif

ifndef LAPACK
ifndef SUNPERF
	LAPACK = -llapack
endif
endif

ifndef FFTW
	FFTW = -lfftw
endif

#	OBJ=$(shell pwd)/$(MACHINE)

OBJ=../$(MACHINE)
OBJDIR = $(OBJ)/obj
ifndef MDIR
  MDIR = $(OBJ)/mod
endif

MFFLAGS = $(FFLAGS)

# if $(PREFIX)/lib exists,
# define LLOC to be added when linking
ifneq ("$(wildcard $(LIBDIR)/libportlib.a)","")
	LLOC=-L$(LIBDIR)
endif 

#include directories
ifneq ("$(wildcard ../incl_cpp/*)","")
	INCFLAGS := $(IOPT)../incl_cpp
endif
ifneq ("$(wildcard ../inclshare/*)","")
	INCFLAGS := $(INCFLAGS) $(IOPT)../inclshare
endif

ifneq ("$(wildcard ../include/*)","")
	INCFLAGS := $(IOPT)../include
endif

DEFS  := $(DEFS) -D__F90 -D__$(OS) -D__UNIX
CDEFS := $(CDEFS) -D__$(OS)

ifdef MPI_ENABLE
   DEFS  := $(DEFS) -D__MPI
   CDEFS := $(CDEFS) -D__MPI
endif
ifdef NO_MDSPLUS
   DEFS  := $(DEFS) -D__NOMDSPLUS
   CDEFS := $(CDEFS) -D__NOMDSPLUS
endif

#include for C code
ifdef LIBROOT
  CINCL = $(IOPT)$(LIBROOT)/include $(IOPT)../include
else
  CINCL = $(IOPT)../include
endif

ifdef INCLDIR
ifneq ("$(wildcard $(INCLDIR)/*)","")
	INCFLAGS := $(INCFLAGS) $(IOPT)$(INCLDIR)
	CINCL := $(CINCL) $(IOPT)$(INCLDIR)
endif
endif

ifndef NETCDF
  ifdef NETCDF_DIR
    ifneq ("$(wildcard $(NETCDF_DIR)/lib/libnetcdf*)","")
       ifdef LORS_DIR
         NETCDF = -L$(NETCDF_DIR)/lib -lnetcdf -L$(LIBXIO_DIR)/lib -lxio -L$(LORS_DIR)/lib -llors_all -lxml2
       else
         NETCDF = -L$(NETCDF_DIR)/lib -lnetcdf
       endif
    else
       NETCDF = -lnetcdf
    endif
  else
    ifneq ("$(wildcard $(USRLIB)/libnetcdf*)","")
       NETCDF = -lnetcdf
    else
       ifneq ("$(wildcard /usr/local/netcdf/lib/libnetcdf*)","")
	 NETCDF_DIR = /usr/local/netcdf
         NETCDF = -L$(NETCDF_DIR)/lib -lnetcdf
       else
         NETCDF = -lcdf_dummy
       endif
    endif
  endif
endif
ifdef NETCDF_DIR
	CINCL := $(CINCL) $(IOPT)$(NETCDF_DIR)/include
else
   ifdef LIBROOT
	NETCDF_DIR := $(LIBROOT)
   endif
endif
ifneq ("$(wildcard $(NETCDF_DIR)/lib/libnetcdff*)","")
   NETCDF := $(NETCDF) -lnetcdff
endif

#include directory for f90 modules
	MODFLAGS := $(MFLAGS)$(MDIR)  
# if some modules (e.g. ezcdf) were already installed, need to add also
ifdef MODDIR
  ifneq ("$(wildcard $(MODDIR)/*)","")
	MODFLAGS := $(MODFLAGS) $(MFLAGS)$(MODDIR)
  endif
endif

# define location of Python preprocessor
PYDIR = ../fpreproc
ifneq ("$(wildcard $(ETCDIR)/fppfile.py)","")
	PYDIR=$(ETCDIR)
else
# for TRANSP in $(CODESYSDIR)/source/bpython
   ifneq ("$(wildcard $(CODESYSDIR)/source/bpython/fppfile.py)","")
      PYDIR=$(CODESYSDIR)/source/bpython
   endif
endif
PREFPP = $(PYTHON) $(PYDIR)/fppfile.py

# check if gnu command line editing libs exist

ifndef NO_EDITLIBS
ifndef TERMCAP
   TERMCAP = -ltermcap
endif
ifdef _64
  ifneq ("$(wildcard /usr/lib64/libreadline*)","") 
	EDITLIBS = -L/usr/lib64 -lreadline -lhistory $(TERMCAP)
  else
    ifneq ("$(wildcard /usr/lib/libreadline*)","") 
	EDITLIBS = -L/usr/lib -lreadline -lhistory $(TERMCAP)
     endif
  endif
else
  ifneq ("$(wildcard $(USRLIB)/libreadline*)","") 
	EDITLIBS = -lreadline -lhistory $(TERMCAP)
  else
    ifneq ("$(wildcard /usr/lib/libreadline*)","") 
	EDITLIBS = -lreadline -lhistory $(TERMCAP)
    else
	ifneq ("$(wildcard /usr/ccs/lib/libtermcap*)","") 
	   EDITLIBS = -L/usr/local/lib -lreadline -lhistory -L/usr/ccs/lib -ltermcap
        endif
    endif
  endif
endif
endif

#check if MDSplus exists
ifeq ("$(wildcard $(MDSPLUS_DIR)/lib/*)","")
	MDSLIB=-lmds_dummy
endif


ifndef MODULESHOME
#check if HDF exists
   ifeq ("$(wildcard $(LIBROOT)/lib/libdf.*)","")
	HDF = -lhdf_dummy
   endif

   ifdef FLIBROOT
     ifdef LIBROOT
	LUSRLIB  = -L$(FLIBROOT)/lib -L$(LIBROOT)/lib 
     endif
   endif
endif
#
# End Libraries / Includes
#===========================
#
#===================================================
# Define Function to pre-process/compile c code
#===================================================
# result is %.o
ifeq ($(MACHINE),CRAY)
  define c_proc
	@cat $< | $(PERL)  -ne \
	's/F77NAME(\([a-zA-Z0-9_ ]+)\)*/F77NAME\U$$1)/g; print;' > $(OBJDIR)/$<;\
	$(CC) $(CFLAGS) -I./ $(INCFLAGS) $(CDEFS) -o $(OBJDIR)/$*.o $(OBJDIR)/$<;\
	if test -z "$(DEBUG)"; then \
	rm $(OBJDIR)/$<; fi
  endef
  define cxx_proc
	@cat $< | $(PERL)  -ne \
	's/F77NAME(\([a-zA-Z0-9_ ]+)\)*/F77NAME\U$$1)/g; print;' >  $(OBJDIR)/$<;\
	$(CXX) $(CXXFLAGS) -I$(OBJ)/obj $(INCFLAGS) $(CDEFS) -o $(OBJDIR)/$*.o $(OBJDIR)/$<;\
	if test -z "$(DEBUG)"; then \
	rm $(OBJDIR)/$<; fi
  endef
  define rm_f
     @if test -z "$(DEBUG)"; then \
       rm -f $(OBJDIR)/$*.f*; fi
     $(mv_mod)
  endef

else
  define c_proc
	$(CC) $(CFLAGS) -I./ $(INCFLAGS) $(CDEFS) -o $(OBJDIR)/$*.o $<
  endef
  define cxx_proc
	$(CXX) $(CXXFLAGS) -I./ $(INCFLAGS) $(CDEFS) -o $(OBJDIR)/$*.o $<
  endef
  define rm_f
     @if test -z "$(DEBUG)"; then \
       rm -f $(OBJDIR)/$*.f*; fi
     $(mv_mod)
  endef

endif

#            --------------------------------------------------
#===================================================
# Functions for Fortran pre/processing using python
#===================================================
# USE for ARCHIVES

# define function to pre-process/compile fixed length fortran 90 code
define F_proc
	@$(PREFPP) $< $(OBJDIR)/$*.f $(INCFLAGS) $(DEFS) $(DPY) $(FPPCOM)
	@$(FC) $(FFLAGS) $(MODFLAGS) -I./ $(INCFLAGS) $(FIXED) $(OUT) $(OBJDIR)/$*.o $(OBJDIR)/$*.f
	$(rm_f)
endef


# define function to pre-process/compile free form fortran 90 code
define F90_proc
	@$(PREFPP) $< $(OBJDIR)/$*.f90 $(INCFLAGS) $(DEFS) -free $(DPY) $(FPPCOM)
	@$(FC90) $(FFLAGS) $(MODFLAGS) -I./ $(INCFLAGS) $(OUT) $(OBJDIR)/$*.o $(OBJDIR)/$*.f90
$(rm_f)
endef

#                    -----------------------------
#
# functions for fortran pre/processing using python
#==================================================
# Note: these are to support TRANSP conventions
#       all code is pre-processed
# USE for executable test programs - when  $* contains $OBJECTDIR

#Fixed Form Fortran 90
define proc_F
$(PREFPP) $< $*.f $(INCFLAGS) $(DEFS) $(DPY) $(FPPCOM)
$(FC) $(FFLAGS) $(MODFLAGS) -I./ $(INCFLAGS) $(FIXED) $(OUT) $*.o $*.f
$(rm_f)
endef

# Free Form Fortran 90
define proc_F90
$(PREFPP) $< $*.f90 $(INCFLAGS) $(DEFS) -free $(DPY) $(FPPCOM)
$(FC) $(FFLAGS) $(MODFLAGS) -I./ $(INCFLAGS) $(OUT) $*.o $*.f90
$(rm_f)
endef


#----------------------------------------------------------------------

# processing of f90 modules
#==========================

# move f90 modules to "$MDIR" dir
# Note:
# mv $*.$(MODEXT) $(MDIR)
# does not work, since module may have different name than file
# Also: module files are always in CWD

#ifdef MVU
#define mv_mod
#   mv $(shell  echo $(*F) | tr 'a-z' 'A-Z').$(MODEXT) $(MDIR)/
#endef
#endif

ifeq ($(OS),SUN)
define mv_mod
   @if test -f *.$(MODEXT); then \
     mv *.$(MODEXT) $(MDIR)/; fi
endef
else
define mv_mod
   @list=`/bin/ls *.$(MODEXT) 2> /dev/null`; \
   for i in  $$list; do \
     mv $$i $(MDIR)/; done
endef
endif

define rm_Warn
   @cat /tmp/ntcc_ld.out |sed -e '/Warning: alignment/d'
   @rm -f /tmp/ntcc_ld.out
endef

#--------------------------------------------------------------------
# ARCHIVES
#==========

define make_ar
	@$(AR) $(ARC)  $(OBJDIR)/$*.o
	@$(mv_mod)
	@if test -z "$(__X1)"; then \
	rm -f $(OBJDIR)/$*.o; fi
endef

-include ../share/Make.overwrite
-include share/Make.overwrite
